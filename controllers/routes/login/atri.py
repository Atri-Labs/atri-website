import json
from typing import List, Any, Optional
from fastapi import UploadFile
default_state = json.loads('{"Image6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image11":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image12":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image13":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox12":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox13":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image18":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox17":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image19":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox18":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox19":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image24":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image25":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image26":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image27":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image28":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image29":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image30":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox24":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox25":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox26":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image31":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image32":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image33":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image34":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox27":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox28":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox29":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image35":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex72":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex73":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image51":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox47":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox48":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex74":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex75":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Menu2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Image52":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image53":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Image54":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox49":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox50":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox51":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Image55":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"Flex76":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex77":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex78":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex79":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex80":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex81":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Image56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"alt":"No preview available","src":""}},"TextBox52":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex82":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Flex83":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox53":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"TextBox54":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex84":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox55":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex85":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"TextBox56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Input2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Flex86":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}},"Button2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":""}},"Input3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox57":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""},"custom":{"text":"Your text Here!"}},"Flex87":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":""}}}')
def get_defined_value(state, def_state, key):
	return state[key] if key in state else def_state[key]
class Atri:
	def __init__(self, state: Any):
		self.event_data = None
		global default_state
		self.Image6 = self.__Image6Class(state["Image6"], default_state["Image6"])
		self.Image7 = self.__Image7Class(state["Image7"], default_state["Image7"])
		self.Image8 = self.__Image8Class(state["Image8"], default_state["Image8"])
		self.TextBox7 = self.__TextBox7Class(state["TextBox7"], default_state["TextBox7"])
		self.TextBox8 = self.__TextBox8Class(state["TextBox8"], default_state["TextBox8"])
		self.TextBox9 = self.__TextBox9Class(state["TextBox9"], default_state["TextBox9"])
		self.Image9 = self.__Image9Class(state["Image9"], default_state["Image9"])
		self.Image11 = self.__Image11Class(state["Image11"], default_state["Image11"])
		self.Image12 = self.__Image12Class(state["Image12"], default_state["Image12"])
		self.Image13 = self.__Image13Class(state["Image13"], default_state["Image13"])
		self.TextBox12 = self.__TextBox12Class(state["TextBox12"], default_state["TextBox12"])
		self.TextBox13 = self.__TextBox13Class(state["TextBox13"], default_state["TextBox13"])
		self.TextBox14 = self.__TextBox14Class(state["TextBox14"], default_state["TextBox14"])
		self.Image14 = self.__Image14Class(state["Image14"], default_state["Image14"])
		self.Image16 = self.__Image16Class(state["Image16"], default_state["Image16"])
		self.Image17 = self.__Image17Class(state["Image17"], default_state["Image17"])
		self.Image18 = self.__Image18Class(state["Image18"], default_state["Image18"])
		self.TextBox15 = self.__TextBox15Class(state["TextBox15"], default_state["TextBox15"])
		self.TextBox16 = self.__TextBox16Class(state["TextBox16"], default_state["TextBox16"])
		self.TextBox17 = self.__TextBox17Class(state["TextBox17"], default_state["TextBox17"])
		self.Image19 = self.__Image19Class(state["Image19"], default_state["Image19"])
		self.Image20 = self.__Image20Class(state["Image20"], default_state["Image20"])
		self.TextBox18 = self.__TextBox18Class(state["TextBox18"], default_state["TextBox18"])
		self.TextBox19 = self.__TextBox19Class(state["TextBox19"], default_state["TextBox19"])
		self.TextBox20 = self.__TextBox20Class(state["TextBox20"], default_state["TextBox20"])
		self.Image21 = self.__Image21Class(state["Image21"], default_state["Image21"])
		self.Image22 = self.__Image22Class(state["Image22"], default_state["Image22"])
		self.Image23 = self.__Image23Class(state["Image23"], default_state["Image23"])
		self.Image24 = self.__Image24Class(state["Image24"], default_state["Image24"])
		self.TextBox21 = self.__TextBox21Class(state["TextBox21"], default_state["TextBox21"])
		self.TextBox22 = self.__TextBox22Class(state["TextBox22"], default_state["TextBox22"])
		self.TextBox23 = self.__TextBox23Class(state["TextBox23"], default_state["TextBox23"])
		self.Image25 = self.__Image25Class(state["Image25"], default_state["Image25"])
		self.Image26 = self.__Image26Class(state["Image26"], default_state["Image26"])
		self.Image27 = self.__Image27Class(state["Image27"], default_state["Image27"])
		self.Image28 = self.__Image28Class(state["Image28"], default_state["Image28"])
		self.Image29 = self.__Image29Class(state["Image29"], default_state["Image29"])
		self.Image30 = self.__Image30Class(state["Image30"], default_state["Image30"])
		self.TextBox24 = self.__TextBox24Class(state["TextBox24"], default_state["TextBox24"])
		self.TextBox25 = self.__TextBox25Class(state["TextBox25"], default_state["TextBox25"])
		self.TextBox26 = self.__TextBox26Class(state["TextBox26"], default_state["TextBox26"])
		self.Image31 = self.__Image31Class(state["Image31"], default_state["Image31"])
		self.Image32 = self.__Image32Class(state["Image32"], default_state["Image32"])
		self.Image33 = self.__Image33Class(state["Image33"], default_state["Image33"])
		self.Image34 = self.__Image34Class(state["Image34"], default_state["Image34"])
		self.TextBox27 = self.__TextBox27Class(state["TextBox27"], default_state["TextBox27"])
		self.TextBox28 = self.__TextBox28Class(state["TextBox28"], default_state["TextBox28"])
		self.TextBox29 = self.__TextBox29Class(state["TextBox29"], default_state["TextBox29"])
		self.Image35 = self.__Image35Class(state["Image35"], default_state["Image35"])
		self.Flex72 = self.__Flex72Class(state["Flex72"], default_state["Flex72"])
		self.Flex73 = self.__Flex73Class(state["Flex73"], default_state["Flex73"])
		self.Image51 = self.__Image51Class(state["Image51"], default_state["Image51"])
		self.TextBox47 = self.__TextBox47Class(state["TextBox47"], default_state["TextBox47"])
		self.TextBox48 = self.__TextBox48Class(state["TextBox48"], default_state["TextBox48"])
		self.Flex74 = self.__Flex74Class(state["Flex74"], default_state["Flex74"])
		self.Flex75 = self.__Flex75Class(state["Flex75"], default_state["Flex75"])
		self.Menu2 = self.__Menu2Class(state["Menu2"], default_state["Menu2"])
		self.Image52 = self.__Image52Class(state["Image52"], default_state["Image52"])
		self.Image53 = self.__Image53Class(state["Image53"], default_state["Image53"])
		self.Image54 = self.__Image54Class(state["Image54"], default_state["Image54"])
		self.TextBox49 = self.__TextBox49Class(state["TextBox49"], default_state["TextBox49"])
		self.TextBox50 = self.__TextBox50Class(state["TextBox50"], default_state["TextBox50"])
		self.TextBox51 = self.__TextBox51Class(state["TextBox51"], default_state["TextBox51"])
		self.Image55 = self.__Image55Class(state["Image55"], default_state["Image55"])
		self.Flex76 = self.__Flex76Class(state["Flex76"], default_state["Flex76"])
		self.Flex77 = self.__Flex77Class(state["Flex77"], default_state["Flex77"])
		self.Flex78 = self.__Flex78Class(state["Flex78"], default_state["Flex78"])
		self.Flex79 = self.__Flex79Class(state["Flex79"], default_state["Flex79"])
		self.Flex80 = self.__Flex80Class(state["Flex80"], default_state["Flex80"])
		self.Flex81 = self.__Flex81Class(state["Flex81"], default_state["Flex81"])
		self.Image56 = self.__Image56Class(state["Image56"], default_state["Image56"])
		self.TextBox52 = self.__TextBox52Class(state["TextBox52"], default_state["TextBox52"])
		self.Flex82 = self.__Flex82Class(state["Flex82"], default_state["Flex82"])
		self.Flex83 = self.__Flex83Class(state["Flex83"], default_state["Flex83"])
		self.TextBox53 = self.__TextBox53Class(state["TextBox53"], default_state["TextBox53"])
		self.TextBox54 = self.__TextBox54Class(state["TextBox54"], default_state["TextBox54"])
		self.Flex84 = self.__Flex84Class(state["Flex84"], default_state["Flex84"])
		self.TextBox55 = self.__TextBox55Class(state["TextBox55"], default_state["TextBox55"])
		self.Flex85 = self.__Flex85Class(state["Flex85"], default_state["Flex85"])
		self.TextBox56 = self.__TextBox56Class(state["TextBox56"], default_state["TextBox56"])
		self.Input2 = self.__Input2Class(state["Input2"], default_state["Input2"])
		self.Flex86 = self.__Flex86Class(state["Flex86"], default_state["Flex86"])
		self.Button2 = self.__Button2Class(state["Button2"], default_state["Button2"])
		self.Input3 = self.__Input3Class(state["Input3"], default_state["Input3"])
		self.TextBox57 = self.__TextBox57Class(state["TextBox57"], default_state["TextBox57"])
		self.Flex87 = self.__Flex87Class(state["Flex87"], default_state["Flex87"])
	def set_event(self, event):
		self.event_data = event["event_data"]
		alias = event["alias"]
		callback_name = event["callback_name"]
		comp = getattr(self, alias)
		setattr(comp, callback_name, True)
	class __Image6ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image6ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image6Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image6ClassstylesClass = Atri._Atri__Image6ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image6ClasscustomClass = Atri._Atri__Image6ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image7ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image7ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image7Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image7ClassstylesClass = Atri._Atri__Image7ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image7ClasscustomClass = Atri._Atri__Image7ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image8ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image8ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image8Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image8ClassstylesClass = Atri._Atri__Image8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image8ClasscustomClass = Atri._Atri__Image8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox7ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox7ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox7Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox7ClassstylesClass = Atri._Atri__TextBox7ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox7ClasscustomClass = Atri._Atri__TextBox7ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox8ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox8ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox8Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox8ClassstylesClass = Atri._Atri__TextBox8ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox8ClasscustomClass = Atri._Atri__TextBox8ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox9ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox9ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox9ClassstylesClass = Atri._Atri__TextBox9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox9ClasscustomClass = Atri._Atri__TextBox9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image9ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image9ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image9Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image9ClassstylesClass = Atri._Atri__Image9ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image9ClasscustomClass = Atri._Atri__Image9ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image11ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image11ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image11Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image11ClassstylesClass = Atri._Atri__Image11ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image11ClasscustomClass = Atri._Atri__Image11ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image12ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image12ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image12Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image12ClassstylesClass = Atri._Atri__Image12ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image12ClasscustomClass = Atri._Atri__Image12ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image13ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image13ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image13Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image13ClassstylesClass = Atri._Atri__Image13ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image13ClasscustomClass = Atri._Atri__Image13ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox12ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox12ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox12Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox12ClassstylesClass = Atri._Atri__TextBox12ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox12ClasscustomClass = Atri._Atri__TextBox12ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox13ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox13ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox13Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox13ClassstylesClass = Atri._Atri__TextBox13ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox13ClasscustomClass = Atri._Atri__TextBox13ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox14ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox14ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox14Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox14ClassstylesClass = Atri._Atri__TextBox14ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox14ClasscustomClass = Atri._Atri__TextBox14ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image14ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image14ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image14Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image14ClassstylesClass = Atri._Atri__Image14ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image14ClasscustomClass = Atri._Atri__Image14ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image16ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image16ClassstylesClass = Atri._Atri__Image16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image16ClasscustomClass = Atri._Atri__Image16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image17ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image17ClassstylesClass = Atri._Atri__Image17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image17ClasscustomClass = Atri._Atri__Image17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image18ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image18ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image18Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image18ClassstylesClass = Atri._Atri__Image18ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image18ClasscustomClass = Atri._Atri__Image18ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox15ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox15ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox15Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox15ClassstylesClass = Atri._Atri__TextBox15ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox15ClasscustomClass = Atri._Atri__TextBox15ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox16ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox16ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox16Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox16ClassstylesClass = Atri._Atri__TextBox16ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox16ClasscustomClass = Atri._Atri__TextBox16ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox17ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox17ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox17Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox17ClassstylesClass = Atri._Atri__TextBox17ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox17ClasscustomClass = Atri._Atri__TextBox17ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image19ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image19ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image19Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image19ClassstylesClass = Atri._Atri__Image19ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image19ClasscustomClass = Atri._Atri__Image19ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image20ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image20ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image20Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image20ClassstylesClass = Atri._Atri__Image20ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image20ClasscustomClass = Atri._Atri__Image20ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox18ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox18ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox18Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox18ClassstylesClass = Atri._Atri__TextBox18ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox18ClasscustomClass = Atri._Atri__TextBox18ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox19ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox19ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox19Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox19ClassstylesClass = Atri._Atri__TextBox19ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox19ClasscustomClass = Atri._Atri__TextBox19ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox20ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox20ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox20Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox20ClassstylesClass = Atri._Atri__TextBox20ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox20ClasscustomClass = Atri._Atri__TextBox20ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image21ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image21ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image21ClassstylesClass = Atri._Atri__Image21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image21ClasscustomClass = Atri._Atri__Image21ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image22ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image22ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image22ClassstylesClass = Atri._Atri__Image22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image22ClasscustomClass = Atri._Atri__Image22ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image23ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image23ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image23Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image23ClassstylesClass = Atri._Atri__Image23ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image23ClasscustomClass = Atri._Atri__Image23ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image24ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image24ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image24Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image24ClassstylesClass = Atri._Atri__Image24ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image24ClasscustomClass = Atri._Atri__Image24ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox21ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox21ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox21Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox21ClassstylesClass = Atri._Atri__TextBox21ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox21ClasscustomClass = Atri._Atri__TextBox21ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox22ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox22ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox22Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox22ClassstylesClass = Atri._Atri__TextBox22ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox22ClasscustomClass = Atri._Atri__TextBox22ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox23ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox23ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox23Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox23ClassstylesClass = Atri._Atri__TextBox23ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox23ClasscustomClass = Atri._Atri__TextBox23ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image25ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image25ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image25Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image25ClassstylesClass = Atri._Atri__Image25ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image25ClasscustomClass = Atri._Atri__Image25ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image26ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image26ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image26Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image26ClassstylesClass = Atri._Atri__Image26ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image26ClasscustomClass = Atri._Atri__Image26ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image27ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image27ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image27Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image27ClassstylesClass = Atri._Atri__Image27ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image27ClasscustomClass = Atri._Atri__Image27ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image28ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image28ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image28Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image28ClassstylesClass = Atri._Atri__Image28ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image28ClasscustomClass = Atri._Atri__Image28ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image29ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image29ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image29Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image29ClassstylesClass = Atri._Atri__Image29ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image29ClasscustomClass = Atri._Atri__Image29ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image30ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image30ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image30Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image30ClassstylesClass = Atri._Atri__Image30ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image30ClasscustomClass = Atri._Atri__Image30ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox24ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox24ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox24Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox24ClassstylesClass = Atri._Atri__TextBox24ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox24ClasscustomClass = Atri._Atri__TextBox24ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox25ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox25ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox25Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox25ClassstylesClass = Atri._Atri__TextBox25ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox25ClasscustomClass = Atri._Atri__TextBox25ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox26ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox26ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox26Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox26ClassstylesClass = Atri._Atri__TextBox26ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox26ClasscustomClass = Atri._Atri__TextBox26ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image31ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image31ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image31Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image31ClassstylesClass = Atri._Atri__Image31ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image31ClasscustomClass = Atri._Atri__Image31ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image32ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image32ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image32Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image32ClassstylesClass = Atri._Atri__Image32ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image32ClasscustomClass = Atri._Atri__Image32ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image33ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image33ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image33Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image33ClassstylesClass = Atri._Atri__Image33ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image33ClasscustomClass = Atri._Atri__Image33ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image34ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image34ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image34Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image34ClassstylesClass = Atri._Atri__Image34ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image34ClasscustomClass = Atri._Atri__Image34ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox27ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox27ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox27Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox27ClassstylesClass = Atri._Atri__TextBox27ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox27ClasscustomClass = Atri._Atri__TextBox27ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox28ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox28ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox28Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox28ClassstylesClass = Atri._Atri__TextBox28ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox28ClasscustomClass = Atri._Atri__TextBox28ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox29ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox29ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox29Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox29ClassstylesClass = Atri._Atri__TextBox29ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox29ClasscustomClass = Atri._Atri__TextBox29ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image35ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image35ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image35Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image35ClassstylesClass = Atri._Atri__Image35ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image35ClasscustomClass = Atri._Atri__Image35ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex72ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex72Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex72ClassstylesClass = Atri._Atri__Flex72ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex73ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex73Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex73ClassstylesClass = Atri._Atri__Flex73ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image51ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image51ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image51Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image51ClassstylesClass = Atri._Atri__Image51ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image51ClasscustomClass = Atri._Atri__Image51ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox47ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox47ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox47Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox47ClassstylesClass = Atri._Atri__TextBox47ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox47ClasscustomClass = Atri._Atri__TextBox47ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox48ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox48ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox48Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox48ClassstylesClass = Atri._Atri__TextBox48ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox48ClasscustomClass = Atri._Atri__TextBox48ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex74ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex74Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex74ClassstylesClass = Atri._Atri__Flex74ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex75ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex75Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex75ClassstylesClass = Atri._Atri__Flex75ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Menu2ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Menu2ClasscustomClass:
		def __init__(self, state, def_state):

			self.open: bool = get_defined_value(state, def_state, "open")
			self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
			self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
			self.src: str = get_defined_value(state, def_state, "src")
			self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
			self.gap: int = get_defined_value(state, def_state, "gap")
			self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
	class __Menu2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Menu2ClassstylesClass = Atri._Atri__Menu2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Menu2ClasscustomClass = Atri._Atri__Menu2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image52ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image52ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image52Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image52ClassstylesClass = Atri._Atri__Image52ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image52ClasscustomClass = Atri._Atri__Image52ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image53ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image53ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image53Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image53ClassstylesClass = Atri._Atri__Image53ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image53ClasscustomClass = Atri._Atri__Image53ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image54ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image54ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image54Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image54ClassstylesClass = Atri._Atri__Image54ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image54ClasscustomClass = Atri._Atri__Image54ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox49ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox49ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox49Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox49ClassstylesClass = Atri._Atri__TextBox49ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox49ClasscustomClass = Atri._Atri__TextBox49ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox50ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox50ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox50Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox50ClassstylesClass = Atri._Atri__TextBox50ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox50ClasscustomClass = Atri._Atri__TextBox50ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox51ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox51ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox51Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox51ClassstylesClass = Atri._Atri__TextBox51ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox51ClasscustomClass = Atri._Atri__TextBox51ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Image55ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image55ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image55Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image55ClassstylesClass = Atri._Atri__Image55ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image55ClasscustomClass = Atri._Atri__Image55ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex76ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex76Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex76ClassstylesClass = Atri._Atri__Flex76ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex77ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex77Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex77ClassstylesClass = Atri._Atri__Flex77ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex78ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex78Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex78ClassstylesClass = Atri._Atri__Flex78ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex79ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex79Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex79ClassstylesClass = Atri._Atri__Flex79ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex80ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex80Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex80ClassstylesClass = Atri._Atri__Flex80ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex81ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex81Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex81ClassstylesClass = Atri._Atri__Flex81ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Image56ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Image56ClasscustomClass:
		def __init__(self, state, def_state):

			self.alt: str = get_defined_value(state, def_state, "alt")
			self.src: str = get_defined_value(state, def_state, "src")
	class __Image56Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Image56ClassstylesClass = Atri._Atri__Image56ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Image56ClasscustomClass = Atri._Atri__Image56ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox52ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox52ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox52Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox52ClassstylesClass = Atri._Atri__TextBox52ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox52ClasscustomClass = Atri._Atri__TextBox52ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex82ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex82Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex82ClassstylesClass = Atri._Atri__Flex82ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Flex83ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex83Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex83ClassstylesClass = Atri._Atri__Flex83ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox53ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox53ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox53Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox53ClassstylesClass = Atri._Atri__TextBox53ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox53ClasscustomClass = Atri._Atri__TextBox53ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox54ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox54ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox54Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox54ClassstylesClass = Atri._Atri__TextBox54ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox54ClasscustomClass = Atri._Atri__TextBox54ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex84ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex84Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex84ClassstylesClass = Atri._Atri__Flex84ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox55ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox55ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox55Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox55ClassstylesClass = Atri._Atri__TextBox55ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox55ClasscustomClass = Atri._Atri__TextBox55ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex85ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex85Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex85ClassstylesClass = Atri._Atri__Flex85ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __TextBox56ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox56ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox56Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox56ClassstylesClass = Atri._Atri__TextBox56ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox56ClasscustomClass = Atri._Atri__TextBox56ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Input2ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Input2ClasscustomClass:
		def __init__(self, state, def_state):

			self.value: str = get_defined_value(state, def_state, "value")
			self.placeholder: str = get_defined_value(state, def_state, "placeholder")
			self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
	class __Input2Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onPressEnter = False
			self.styles: Atri.__Input2ClassstylesClass = Atri._Atri__Input2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Input2ClasscustomClass = Atri._Atri__Input2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex86ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex86Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex86ClassstylesClass = Atri._Atri__Flex86ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
	class __Button2ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Button2ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __Button2Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Button2ClassstylesClass = Atri._Atri__Button2ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Button2ClasscustomClass = Atri._Atri__Button2ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Input3ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Input3ClasscustomClass:
		def __init__(self, state, def_state):

			self.value: str = get_defined_value(state, def_state, "value")
			self.placeholder: str = get_defined_value(state, def_state, "placeholder")
			self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
	class __Input3Class:
		def __init__(self, state, def_state):
			self.onChange = False
			self.onPressEnter = False
			self.styles: Atri.__Input3ClassstylesClass = Atri._Atri__Input3ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__Input3ClasscustomClass = Atri._Atri__Input3ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __TextBox57ClassstylesClass:
		def __init__(self, state, def_state):

			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __TextBox57ClasscustomClass:
		def __init__(self, state, def_state):

			self.text: str = get_defined_value(state, def_state, "text")
	class __TextBox57Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__TextBox57ClassstylesClass = Atri._Atri__TextBox57ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])
			self.custom: Atri.__TextBox57ClasscustomClass = Atri._Atri__TextBox57ClasscustomClass(get_defined_value(state, def_state, "custom"), def_state["custom"])
	class __Flex87ClassstylesClass:
		def __init__(self, state, def_state):

			self.display: str = get_defined_value(state, def_state, "display")
			self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
			self.alignItems: str = get_defined_value(state, def_state, "alignItems")
			self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
			self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
			self.alignContent: str = get_defined_value(state, def_state, "alignContent")
			self.rowGap: str = get_defined_value(state, def_state, "rowGap")
			self.columnGap: str = get_defined_value(state, def_state, "columnGap")
			self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
			self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
			self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
			self.order: str = get_defined_value(state, def_state, "order")
			self.marginTop: str = get_defined_value(state, def_state, "marginTop")
			self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
			self.marginRight: str = get_defined_value(state, def_state, "marginRight")
			self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
			self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
			self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
			self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
			self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
			self.width: str = get_defined_value(state, def_state, "width")
			self.height: str = get_defined_value(state, def_state, "height")
			self.minWidth: str = get_defined_value(state, def_state, "minWidth")
			self.minHeight: str = get_defined_value(state, def_state, "minHeight")
			self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
			self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
			self.overflow: str = get_defined_value(state, def_state, "overflow")
			self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
			self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
			self.fontSize: str = get_defined_value(state, def_state, "fontSize")
			self.textAlign: str = get_defined_value(state, def_state, "textAlign")
			self.color: str = get_defined_value(state, def_state, "color")
			self.opacity: str = get_defined_value(state, def_state, "opacity")
			self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
			self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
			self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
			self.borderColor: str = get_defined_value(state, def_state, "borderColor")
			self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
			self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
			self.position: str = get_defined_value(state, def_state, "position")
			self.float: str = get_defined_value(state, def_state, "float")
			self.clear: str = get_defined_value(state, def_state, "clear")
			self.top: str = get_defined_value(state, def_state, "top")
			self.left: str = get_defined_value(state, def_state, "left")
			self.bottom: str = get_defined_value(state, def_state, "bottom")
			self.right: str = get_defined_value(state, def_state, "right")
			self.zIndex: str = get_defined_value(state, def_state, "zIndex")
			self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
			self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
			self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
			self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
			self.cursor: str = get_defined_value(state, def_state, "cursor")
	class __Flex87Class:
		def __init__(self, state, def_state):
			self.onClick = False
			self.styles: Atri.__Flex87ClassstylesClass = Atri._Atri__Flex87ClassstylesClass(get_defined_value(state, def_state, "styles"), def_state["styles"])